[{"/Users/jeremieridao/Desktop/technical-test/src/index.js":"1","/Users/jeremieridao/Desktop/technical-test/src/reportWebVitals.js":"2","/Users/jeremieridao/Desktop/technical-test/src/App.js":"3","/Users/jeremieridao/Desktop/technical-test/src/components/Home.tsx":"4","/Users/jeremieridao/Desktop/technical-test/src/components/Header.tsx":"5","/Users/jeremieridao/Desktop/technical-test/src/components/ItemPage.tsx":"6","/Users/jeremieridao/Desktop/technical-test/src/utils/storage.js":"7","/Users/jeremieridao/Desktop/technical-test/src/theme/GlobalStyles.js":"8","/Users/jeremieridao/Desktop/technical-test/src/theme/useTheme.js":"9"},{"size":754,"mtime":1621239104919,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1620289832724,"results":"12","hashOfConfig":"11"},{"size":1594,"mtime":1621337186473,"results":"13","hashOfConfig":"11"},{"size":2466,"mtime":1620821613143,"results":"14","hashOfConfig":"11"},{"size":2275,"mtime":1621338355628,"results":"15","hashOfConfig":"11"},{"size":1554,"mtime":1620739079396,"results":"16","hashOfConfig":"11"},{"size":270,"mtime":1621241172638,"results":"17","hashOfConfig":"11"},{"size":305,"mtime":1621241264076,"results":"18","hashOfConfig":"11"},{"size":788,"mtime":1621241437953,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"g9ippz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/Users/jeremieridao/Desktop/technical-test/src/index.js",[],["45","46"],"/Users/jeremieridao/Desktop/technical-test/src/reportWebVitals.js",[],"/Users/jeremieridao/Desktop/technical-test/src/App.js",["47"],"import { useState, useEffect } from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport WebFont from 'webfontloader'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { GlobalStyles } from './theme/GlobalStyles'\nimport { useTheme } from './theme/useTheme'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport ItemPage from './components/ItemPage'\n\nconst Container = styled.div`\n  width: 80%;\n  margin: auto;\n`;\n\n\n  const pathname = window.location.pathname\n\n  console.log('teeest :', window.location.href);\n  console.log('pathname :', pathname);\n\n  // const conditionDisplay = (pathname === '/') !== displayBackButton\n  // console.log('conditionDisplay :', conditionDisplay);\n\n\nfunction App() {\n   const {theme, themeLoaded, getFonts} = useTheme();\n   const [selectedTheme, setSelectedTheme] = useState(theme);\n   \n   useEffect(() => {\n     setSelectedTheme(theme);\n    }, [themeLoaded]);\n \n   useEffect(() => {\n     WebFont.load({\n       google: {\n         families: getFonts()\n       }\n     });\n   });\n  \n  return (\n    <>\n    {\n      themeLoaded && <ThemeProvider theme={ selectedTheme }>\n        <GlobalStyles/>\n        <Container style={{fontFamily: selectedTheme.font}}>\n          <Router>\n            <Header setter={ setSelectedTheme }/>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/item-page/:id\" component={ItemPage} />\n          </Router>\n        </Container>\n      </ThemeProvider>\n    }\n    </>\n  );\n}\n\nexport default App;\n","/Users/jeremieridao/Desktop/technical-test/src/components/Home.tsx",["48"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n\n\nconst Catalog = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nconst Title = styled.h3`\n    font-size: 1.5rem;\n    color: #ffffff;\n    opacity: 0;\n    position: absolute;\n`;\n\nconst MovieCard = styled.div`\n    margin: 0.2rem;\n    width: 190px;\n    height: 300px;\n    filter: brightness(100%);\n\n    &:hover {\n        filter: brightness(50%);\n    }\n    &:hover ${Title} {\n        opacity: 1;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n`;\n\nconst Image = styled.img`\n    width: 100%;\n    height: 100%;\n`;\n\ninterface IPopularMovie {\n    map(arg0: (popularMovie: any) => JSX.Element): React.ReactNode;\n    id: number;\n    poster_path: string;\n    title: string;\n  }\n\nconst Home = () => {\n    useEffect(() => {\n        getPopulateMovies();\n    }, []); \n\n    const [ popularMovies, setPopularMovies ] = useState([] as any[]);\n    const getPopulateMovies = async () => {\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=5bcd76c471e358e143b8721211e000d4')\n        const allPopularMovies: any = await response.json();\n\n        console.log('allPopularMovies :', allPopularMovies);\n        setPopularMovies(allPopularMovies.results);\n    }\n\n    return (\n        <Container>\n            <div>search bar</div>\n           {popularMovies.length ? <h1>Films populaires</h1> : ''}\n            \n            <Catalog>\n                    {!popularMovies ? '' : popularMovies.map((popularMovie) => {\n                        // console.log(popularMovie);\n\n                        return (\n                            <MovieCard key={popularMovie.title}>\n                                <Link to={`/item-page/${popularMovie.id}`}>\n                                    <Title>{popularMovie.title}</Title>\n                                    <Image\n                                        src={`https://image.tmdb.org/t/p/w300/${popularMovie.poster_path}`}\n                                        alt={popularMovie.title}>\n                                    </Image>                                       \n                                </Link>\n                            </MovieCard>\n                        )})}\n            </Catalog>\n        </Container>\n    )\n}\n\nexport default Home\n\n\n  ",["49","50"],"/Users/jeremieridao/Desktop/technical-test/src/components/Header.tsx",["51","52","53","54","55","56","57"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport { WbSunny, Brightness3 } from '@material-ui/icons'\nimport { ToggleButton } from 'react-bootstrap'\n\nimport { useTheme } from '../theme/useTheme'\nimport { getFromLocalStorage } from '../utils/storage'\n\nconst HeaderContainer = styled.header`\n    display: flex;\n    justify-content: space-between;\n    background-color: #60A5FA;\n    height: 60px;\n    align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n  cursor: pointer;\n  text-decoration: none;\n`;\n\ninterface data {\n    name: string;\n    age: number;\n  }\n\nconst Header = (props: { setter: (arg0: any) => void; theme: any }) => {\n    // useEffect(() => {\n    //     weAreOnItemPage();\n    // }, []); \n\n    // const [ displayBackButton, setDisplayBackButton ] = useState(Boolean);\n\n    // const weAreOnItemPage = async () => {\n    //     const pathname = window.location.pathname\n\n    //     console.log('teeest :', window.location.href);\n    //     console.log('pathname :', pathname);\n    \n    //     const conditionDisplay = (pathname === '/') !== displayBackButton\n    //     console.log('conditionDisplay :', conditionDisplay);\n\n    //     setDisplayBackButton(conditionDisplay)\n    // }\n\n    const themesFromStore = getFromLocalStorage('all-themes');\n    const [data, setData] = useState(themesFromStore.data);\n    // const [themes, setThemes] = useState([]);\n    const {setMode} = useTheme();\n\n    const themeSwitcher = (selectedTheme: any) => {\n        console.log(selectedTheme);\n        setMode(selectedTheme);\n        props.setter(selectedTheme);\n    };\n\n    // useEffect(() => {\n    //     setThemes(_.keys(data));\n    // }, [data]);\n\n\n\n    return (\n        <HeaderContainer>\n            {/* {displayBackButton ? (<Link to=\"/\">Back button</Link>) : ''} */}\n            <Link to=\"/\">Back button</Link>\n            <Link to=\"/\">\n                <Title>Le 7Ã©me art</Title>\n            </Link>\n            <div>toggle theme</div>\n            <ToggleButton value={\"pomme\"} onClick={ (theme) => themeSwitcher(props.theme) }></ToggleButton>\n        </HeaderContainer>\n    )\n}\n\nexport default Header","/Users/jeremieridao/Desktop/technical-test/src/components/ItemPage.tsx",["58","59"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin: 3rem;\n    justify-content: space-around;\n`;\n\nconst DetailsContainer = styled.div`\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n`;\n\nconst Image = styled.img`\n    // width: 100%;\n    // height: 100%;\n`;\n\ninterface IMovie {\n    map(arg0: (movie: any) => JSX.Element): React.ReactNode;\n    title: string;\n    poster_path: string;\n    overview: string;\n  }\n\nconst ItemPage = ({ match }: any) => {\n    useEffect(() => {\n        getMovie();\n    }, []); \n\n    const [ movie, setMovie ] = useState({} as any);\n\n    const getMovie = async () => {\n        const idParams: number = match.params.id\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${idParams}?api_key=5bcd76c471e358e143b8721211e000d4`)\n\n        const movie: any = await response.json();\n\n        console.log('movie :', movie);\n        setMovie(movie);\n    }\n\n    return (\n        <Container>\n            <DetailsContainer>\n                <h1>{movie.title}</h1>\n                <p>{movie.overview}</p>\n                <p>{movie.vote_average}/10</p>\n            </DetailsContainer>\n            <div>\n                <Image\n                    src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                    alt={movie.title}>\n                </Image>  \n            </div>\n        </Container>\n    )\n       \n}\n\nexport default ItemPage","/Users/jeremieridao/Desktop/technical-test/src/utils/storage.js",[],"/Users/jeremieridao/Desktop/technical-test/src/theme/GlobalStyles.js",[],"/Users/jeremieridao/Desktop/technical-test/src/theme/useTheme.js",["60"],"import { useEffect, useState } from 'react';\nimport { setToLocalStorage, getFromLocalStorage } from '../utils/storage.js';\nimport _ from 'lodash';\n\nexport const useTheme = () => {\n  const themes = getFromLocalStorage('all-themes');\n  const [theme, setTheme] = useState(themes.data.light);\n  const [themeLoaded, setThemeLoaded] = useState(false);\n\n  const setMode = mode => {\n    setToLocalStorage('theme', mode)\n    setTheme(mode);\n  };\n\n  const getFonts = () => {\n    const allFonts = _.values(_.mapValues(themes.data, 'font'));\n    return allFonts;\n  }\n\n  useEffect(() =>{\n    const localTheme = getFromLocalStorage('theme');\n    localTheme ? setTheme(localTheme) : setTheme(themes.data.light);\n    setThemeLoaded(true);\n  }, []);\n\n  return { theme, themeLoaded, setMode, getFonts };\n};",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":34,"column":8,"nodeType":"67","endLine":34,"endColumn":21,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":43,"column":11,"nodeType":"71","messageId":"72","endLine":43,"endColumn":24},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"74","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":9},{"ruleId":"69","severity":1,"message":"75","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":17},{"ruleId":"69","severity":1,"message":"76","line":5,"column":19,"nodeType":"71","messageId":"72","endLine":5,"endColumn":30},{"ruleId":"69","severity":1,"message":"77","line":27,"column":11,"nodeType":"71","messageId":"72","endLine":27,"endColumn":15},{"ruleId":"69","severity":1,"message":"78","line":52,"column":12,"nodeType":"71","messageId":"72","endLine":52,"endColumn":16},{"ruleId":"69","severity":1,"message":"79","line":52,"column":18,"nodeType":"71","messageId":"72","endLine":52,"endColumn":25},{"ruleId":"69","severity":1,"message":"80","line":23,"column":11,"nodeType":"71","messageId":"72","endLine":23,"endColumn":17},{"ruleId":"65","severity":1,"message":"81","line":33,"column":8,"nodeType":"67","endLine":33,"endColumn":10,"suggestions":"82"},{"ruleId":"65","severity":1,"message":"83","line":24,"column":6,"nodeType":"67","endLine":24,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.","ArrayExpression",["87"],"@typescript-eslint/no-unused-vars","'IPopularMovie' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'_' is defined but never used.","'WbSunny' is defined but never used.","'Brightness3' is defined but never used.","'data' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'IMovie' is defined but never used.","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'themes.data.light'. Either include it or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [theme, themeLoaded]",{"range":"96","text":"97"},"Update the dependencies array to be: [getMovie]",{"range":"98","text":"99"},"Update the dependencies array to be: [themes.data.light]",{"range":"100","text":"101"},[996,1009],"[theme, themeLoaded]",[668,670],"[getMovie]",[728,730],"[themes.data.light]"]